<?php
/**
 */

namespace execut\peopleFinder\Tests\Unit;


use Codeception\Test\Unit;
use \execut\peopleFinder\People\People;
use execut\peopleFinder\Result;
use execut\peopleFinder\SearchClient;

class ResultTest extends Unit
{
    public function testGetCount()
    {
        $client = $this->getMockBuilder(SearchClient::class)->getMock();
        $count = 100;
        $client->method('getTotalCount')
            ->willReturn($count);
        $result = new Result('Test User', $client);
        $this->assertEquals($count, $result->count());
    }

    public function testGetPeople()
    {
        $people = $this->getMockBuilder(People::class)->getMock();
        $client = $this->getMockBuilder(SearchClient::class)->getMock();
        $client->method('getPeople')
            ->willReturn($people);
        $result = new Result('Test User', $client);
        $this->assertEquals(spl_object_hash($people), spl_object_hash($result->getPeople()));
    }

    public function testNextPeople()
    {
        $client = $this->getMockBuilder(SearchClient::class)->getMock();
        $client->expects($this->once())
            ->method('setPosition')
            ->with(1);
        $result = new Result('Test User', $client);
        $this->assertTrue($result->next());
    }

    public function testSetCurrentPeopleKey()
    {
        $client = $this->getMockBuilder(SearchClient::class)->getMock();
        $client->expects($this->once())
            ->method('setPosition')
            ->with(1);
        $result = new Result('Test User', $client);
        $result->setPosition(1);
    }
}